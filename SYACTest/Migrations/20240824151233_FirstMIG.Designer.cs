// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SYACTest.AppDbContext;

#nullable disable

namespace SYACTest.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20240824151233_FirstMIG")]
    partial class FirstMIG
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SYACTest.Entitys.Clients", b =>
                {
                    b.Property<int>("clientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("clientId"), 1L, 1);

                    b.Property<string>("address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("document")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clientId");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("SYACTest.Entitys.Products", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"), 1L, 1);

                    b.Property<string>("productName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("productUnitValue")
                        .HasColumnType("int");

                    b.Property<string>("productoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("purchesOrderId")
                        .HasColumnType("int");

                    b.HasKey("productId");

                    b.HasIndex("purchesOrderId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SYACTest.Entitys.ProductsToPurchs", b =>
                {
                    b.Property<int>("productsToPurchsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productsToPurchsId"), 1L, 1);

                    b.Property<int>("TtotalToPurch")
                        .HasColumnType("int");

                    b.Property<int>("purchesOrderId")
                        .HasColumnType("int");

                    b.Property<int>("totalPurchValue")
                        .HasColumnType("int");

                    b.HasKey("productsToPurchsId");

                    b.HasIndex("purchesOrderId");

                    b.ToTable("ProductsToPurchs");
                });

            modelBuilder.Entity("SYACTest.Entitys.PurchesOrder", b =>
                {
                    b.Property<int>("purchesOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("purchesOrderId"), 1L, 1);

                    b.Property<string>("RequestAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TtotalToPurch")
                        .HasColumnType("int");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<string>("priority")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("recordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("state")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalPurchValue")
                        .HasColumnType("int");

                    b.HasKey("purchesOrderId");

                    b.HasIndex("clientId");

                    b.ToTable("purchesOrders");
                });

            modelBuilder.Entity("SYACTest.Entitys.Products", b =>
                {
                    b.HasOne("SYACTest.Entitys.PurchesOrder", "purchesOrder")
                        .WithMany("products")
                        .HasForeignKey("purchesOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("purchesOrder");
                });

            modelBuilder.Entity("SYACTest.Entitys.ProductsToPurchs", b =>
                {
                    b.HasOne("SYACTest.Entitys.PurchesOrder", "purchesOrder")
                        .WithMany()
                        .HasForeignKey("purchesOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("purchesOrder");
                });

            modelBuilder.Entity("SYACTest.Entitys.PurchesOrder", b =>
                {
                    b.HasOne("SYACTest.Entitys.Clients", "clients")
                        .WithMany()
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("clients");
                });

            modelBuilder.Entity("SYACTest.Entitys.PurchesOrder", b =>
                {
                    b.Navigation("products");
                });
#pragma warning restore 612, 618
        }
    }
}
