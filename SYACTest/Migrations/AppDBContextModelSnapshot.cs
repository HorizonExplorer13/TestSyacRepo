// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SYACTest.AppDbContext;

#nullable disable

namespace SYACTest.Migrations
{
    [DbContext(typeof(AppDBContext))]
    partial class AppDBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.33")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SYACTest.Entitys.ClientsEntity", b =>
                {
                    b.Property<int>("clientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("clientId"), 1L, 1);

                    b.Property<string>("clientAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clientDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("clientName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("clientId");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("SYACTest.Entitys.OrderProducts", b =>
                {
                    b.Property<int>("orderProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("orderProductId"), 1L, 1);

                    b.Property<decimal>("partialValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("productId")
                        .HasColumnType("int");

                    b.Property<int>("purchaseOrderId")
                        .HasColumnType("int");

                    b.Property<int>("quantity")
                        .HasColumnType("int");

                    b.HasKey("orderProductId");

                    b.HasIndex("productId");

                    b.HasIndex("purchaseOrderId");

                    b.ToTable("orderProducts");
                });

            modelBuilder.Entity("SYACTest.Entitys.Products", b =>
                {
                    b.Property<int>("productId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("productId"), 1L, 1);

                    b.Property<string>("productCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("productname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("unitValue")
                        .HasColumnType("int");

                    b.HasKey("productId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("SYACTest.Entitys.PurchesOrders", b =>
                {
                    b.Property<int>("purchesOrderid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("purchesOrderid"), 1L, 1);

                    b.Property<decimal>("TotalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("clientId")
                        .HasColumnType("int");

                    b.Property<string>("deliveryAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("priority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("recordDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("state")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("purchesOrderid");

                    b.HasIndex("clientId");

                    b.ToTable("purchesOrders");
                });

            modelBuilder.Entity("SYACTest.Entitys.OrderProducts", b =>
                {
                    b.HasOne("SYACTest.Entitys.Products", "products")
                        .WithMany("OrderProducts")
                        .HasForeignKey("productId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SYACTest.Entitys.PurchesOrders", "purchaseOrders")
                        .WithMany("orderProducts")
                        .HasForeignKey("purchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("products");

                    b.Navigation("purchaseOrders");
                });

            modelBuilder.Entity("SYACTest.Entitys.PurchesOrders", b =>
                {
                    b.HasOne("SYACTest.Entitys.ClientsEntity", "client")
                        .WithMany("purchesOrdersAsosiated")
                        .HasForeignKey("clientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("client");
                });

            modelBuilder.Entity("SYACTest.Entitys.ClientsEntity", b =>
                {
                    b.Navigation("purchesOrdersAsosiated");
                });

            modelBuilder.Entity("SYACTest.Entitys.Products", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("SYACTest.Entitys.PurchesOrders", b =>
                {
                    b.Navigation("orderProducts");
                });
#pragma warning restore 612, 618
        }
    }
}
